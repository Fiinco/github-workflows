name: Golang Test Coverage

on:
  workflow_call:
    inputs:
      minimum-coverage:
        required: false
        type: string
        default: 1
      go-version:
        required: false
        type: string
        default: '1.20'
      sql-repository:
        required: false
        type: string
    secrets:
      github-token:
        required: true

env:
  GOPRIVATE: github.com/Fiinco
  AWS_REGION: disabled #to do: manter isto?
  DB_HOSTNAME: localhost
  DB_PORT: 5432
  DB_DATABASE: postgres
  DB_USERNAME: postgres
  DB_PASSWORD: password

jobs:
  golang-test-coverage:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - name: Check if test files exist
        if: ${{ success() }}
        uses: andstor/file-existence-action@v3
        with:
          files: "**/*_test.go"
          fail: true

      - uses: actions/setup-go@v5
        if: ${{ success() }}
        with:
          go-version: ${{ inputs.go-version }}
          cache: true

      - run: go version
        if: ${{ success() }}

      - name: Grant access to private Go Modules
        if: ${{ success() }}
        run: git config --global url."https://fiinco:${{ secrets.github-token }}@github.com/Fiinco".insteadOf "https://github.com/Fiinco"

      - name: Get dependencies
        if: ${{ success() }}
        run: go mod download

      - name: Build Application
        if: ${{ success() && (!startsWith(github.event.repository.name, 'lib-go-')) }} #Go libraries can't be built
        run: go build -ldflags="-s -w" -o ./app/ ./...

      - name: Checkout SQL script for database migration
        if: ${{ success() && (inputs.sql-repository != '') }}
        uses: actions/checkout@v4
        with:
          repository: Fiinco/${{ inputs.sql-repository }}
          token: ${{ secrets.github-token }}
          path: .sql-migration-repo
          sparse-checkout: sql

      - name: Perform database migration
        if: ${{ success() && (inputs.sql-repository != '') }}
        run: >
          docker run --rm
          -v ${{ github.workspace }}/.sql-migration-repo/sql:/flyway/sql
          --network=host
          flyway/flyway
          -url=jdbc:postgresql://localhost:5432/postgres?sslmode=disable
          -user=postgres
          -password=password
          migrate

      - name: Run tests
        if: ${{ success() }}
        run: go test -v -covermode=set -coverprofile=coverage.out ./...

      #No passo de "Grant access to private Go Modules" acima, configuramos o arquivo .git/config com uma informação sensível
      #Vamos limpar as pastas do git para que as actions de agora em diante não tenham acesso àquela informação
      - name: Remove .git directory
        if: ${{ success() }}
        run: rm -r .git

      - name: Convert coverage to lcov
        if: ${{ success() }}
        uses: jandelgado/gcov2lcov-action@v1
        with:
          infile: coverage.out        # optional, default filename is `coverage.out`
          outfile: coverage.lcov      # optional, default filename is `coverage.lcov`

      - name: Check test coverage
        if: ${{ success() }}
        uses: terencetcf/github-actions-lcov-minimum-coverage-checker@v1
        with:
          coverage-file: coverage.lcov
          minimum-coverage: ${{ inputs.minimum-coverage }}


